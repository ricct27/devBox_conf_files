### https://www.youtube.com/watch?v=UWg3ORRRF60
### https://docs.nvidia.com/datacenter/kubernetes-install-guide/index.html


### Disable Swap
sudo swapoff -a

### Comment the swap line
sudo nano /etc/fstab

### Set the hostnames
sudo nano /etc/hostname

### Associate hostname with the static IP
sudo nano /etc/hosts

### Install openSSH server
sudo apt-get install openssh-server

### Install Docker https://kubernetes.io/docs/setup/cri/ , not the last one because not supported
### Follow the script docker_install 
### If Nvidia-docker is installed then follow the script for the Nvidia_doocker_install



############### Master Nodes: ###################################################################

### Delete old things
sudo kubeadm reset
sudo rm -r $HOME/.kube/

### Add the official GPG keys.
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
curl -s -L https://nvidia.github.io/kubernetes/gpgkey | sudo apt-key add -
curl -s -L https://nvidia.github.io/kubernetes/ubuntu16.04/nvidia-kubernetes.list |\
sudo tee /etc/apt/sources.list.d/nvidia-kubernetes.list

sudo apt update

###Install packages.
VERSION=1.10.11+nvidia
sudo apt install -y kubectl=${VERSION} kubelet=${VERSION} \
     kubeadm=${VERSION} helm=${VERSION}
apt-mark hold kubelet kubeadm kubectl


### check docker cgroup
docker info |grep -i cgroup



### Edit file for configurin the cgroup of kubelet
# https://kubernetes.io/docs/setup/independent/troubleshooting-kubeadm/
nano /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
Environment="cgroup-driver=systemd/cgroup-driver=cgroupfs"
Environment="KUBELET_EXTRA_ARGS=--fail-swap-on=false"
#Environment="KUBELET_CGROUP_ARGS=--cgroup-driver=systemd"
#Environment="KUBELET_CGROUP_ARGS=--cgroup-driver=cgroupfs"
sudo systemctl status kubelet
sudo systemctl daemon-reload
sudo systemctl restart kubelet
sudo systemctl status kubelet

sudo journalctl -xeu kubelet


    # Start your cluster.   --apiserver-advertise-address
    # sudo kubeadm init --apiserver-advertise-address=192.168.1.81 --ignore-preflight-errors=all --config /etc/kubeadm/config.yml
    # sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=192.168.1.81 --kubernetes-version stable-1.10.11 --ignore-preflight-errors=all
     sudo kubeadm init --ignore-preflight-errors=all --config /etc/kubeadm/config.yml

    

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config


# For errors with cgroup compatibility between k8 and docker chance
nano /etc/docker/daemon.json

# Checking Cluster Health
kubectl get all --all-namespaces
kubectl get nodes



# To retrieve the token the joining token
sudo kubeadm token create --print-join-command


################################ Worker Nodes ##########################################################

  # check Nvidia-Docker  https://github.com/NVIDIA/nvidia-docker
  # Add the following
  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
  curl -s -L https://nvidia.github.io/kubernetes/gpgkey | sudo apt-key add -
  curl -s -L https://nvidia.github.io/kubernetes/ubuntu16.04/nvidia-kubernetes.list |\
           sudo tee /etc/apt/sources.list.d/nvidia-kubernetes.list

  sudo apt update

  # Install packages
  VERSION=1.10.11+nvidia
  sudo apt install -y kubectl=${VERSION} kubelet=${VERSION} \
                               kubeadm=${VERSION} helm=${VERSION}

 # Retrieve joining token from the Master
 sudo kubeadm token create --print-join-command

 # Join the worker node to the cluster with a command similar to the following
 <join-token>  --ignore-preflight-errors=all

### In case of Swap and Cgroup erros edit the file
# https://kubernetes.io/docs/setup/independent/troubleshooting-kubeadm/
nano /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
Environment="cgroup-driver=systemd/cgroup-driver=cgroupfs"
Environment="KUBELET_EXTRA_ARGS=--fail-swap-on=false"
#Environment="KUBELET_CGROUP_ARGS=--cgroup-driver=systemd"
#Environment="KUBELET_CGROUP_ARGS=--cgroup-driver=cgroupfs"
systemctl status kubelet
systemctl daemon-reload
systemctl restart kubelet
systemctl status kubelet

sudo apt-mark hold kubelet kubeadm kubectl


 kubectl describe nodes
 kubectl get nodes


 ########## Reset K8 ########################################################

  kubeadm reset
  rmdir $HOME/.kube












































######################################################
